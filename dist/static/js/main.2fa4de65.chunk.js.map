{"version":3,"sources":["config/fbConfig.js","components/layout/LoginLinks.js","store/actions/authActions.js","components/layout/SignedoutLinks.js","components/layout/Navbar.js","components/home/Home.js","components/blogs/BlogSummary.js","components/blogs/BlogList.js","components/blogs/BlogDetails.js","store/actions/blogActions.js","components/auth/Login.js","components/auth/Signup.js","components/blogs/CreateBlog.js","components/home/Notification.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/blogReducer.js","store/reducers/rootReducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","connect","ref","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","activeClassName","onClick","SignedOutLinks","state","links","uid","Home","document","body","style","backgroundColor","Component","BlogSummary","blog","src","url","alt","likedBy","length","moment","createdAt","toDate","calendar","title","authorFirstName","authorLastName","content","BlogList","filter","handleFilter","e","console","log","target","id","setState","this","blogs","href","map","key","cuisine","compose","ordered","firestoreConnect","collection","orderBy","BlogDetails","handleLike","likeBlog","match","params","class","ownProps","data","updatedLikedBy","signedInUser","indexOf","item","updatedPost","doc","set","catch","err","Login","email","password","handleChange","value","handleSubmit","preventDefault","login","authError","onSubmit","placeholder","onChange","creds","credentials","signInWithEmailAndPassword","Signup","firstName","lastName","signUp","newUser","createUserWithEmailAndPassword","resp","user","initials","CreateBlog","image","handleSelect","selectValue","createBlog","history","push","handleImage","files","handleUpload","imageName","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","child","getDownloadURL","disabled","selected","hidden","profile","authorId","add","Date","notifications","limit","time","fromNow","App","exact","path","component","Notifications","Boolean","window","location","hostname","initState","authReducer","action","message","blogReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","children","useSelector","isLoaded","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2fa4de65.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\n\r\n// Your web app's Firebase configuration\r\nvar config = {\r\n    apiKey: \"AIzaSyC7eZtkIRlD7nf-HzhUR8IdFrSSnWIGWUs\",\r\n    authDomain: \"react-fooddiaries.firebaseapp.com\",\r\n    databaseURL: \"https://react-fooddiaries.firebaseio.com\",\r\n    projectId: \"react-fooddiaries\",\r\n    storageBucket: \"react-fooddiaries.appspot.com\",\r\n    messagingSenderId: \"784850069577\",\r\n    appId: \"1:784850069577:web:e62895549fd444964fb798\",\r\n    measurementId: \"G-948QZ2G5EE\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(config);\r\n  // firebase.firestore().settings({timestampsInSnapshots: true});\r\n\r\n  export const firestore = firebase.firestore();\r\n\r\n  export default firebase\r\n\r\n  // Get a reference to the storage service, which is used to create references in your storage bucket\r\n  export const storage = firebase.storage();\r\n  // Create a storage reference from our storage service\r\n  export const storageRef = storage.ref();","import React, {useState} from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport '../../css/styles.css'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\n\r\nconst LoginLinks =(props) =>{\r\n   \r\n    return(\r\n        <nav className=\"main-nav\">\r\n            <ul >\r\n                <li ><NavLink to='/' >Home</NavLink></li>\r\n                <li ><NavLink to='/bloglist' activeClassName='active-pink' >Blogs</NavLink></li>\r\n                <li ><NavLink to='/createblog' activeClassName='active-pink'>Create Blog</NavLink></li>\r\n                <li ><NavLink to='/notifications' activeClassName='active-pink'>Notifications</NavLink></li>\r\n                <li className=\"login-nav\"><a onClick= {props.signOut}>Log Out</a></li>\r\n            </ul>\r\n        </nav>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch =>{\r\n    return{\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null,mapDispatchtoProps) (LoginLinks)","import { firestore } from '../../config/fbConfig'\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR',err });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type:'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type:'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport '../../css/styles.css'\r\n\r\nconst SignedOutLinks =() =>{\r\n    return(\r\n        <nav className=\"main-nav\">\r\n            <ul>\r\n                <li className=\"login-nav\"><NavLink to='/login'>Login</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport LoginLinks from './LoginLinks'\r\nimport '../../css/styles.css'\r\nimport SignedOutLinks from './SignedoutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Navbar =(props) =>{\r\n    const { auth } = props;\r\n    const links = auth.uid? <LoginLinks/> : <SignedOutLinks/>\r\n    return(\r\n\r\n        <div className=\"container\">\r\n            <header className=\"main-header\">\r\n                <Link to='/' className =\"brand-logo\">Food \r\n                <span className=\"text-pink\"> Diaries</span></Link>\r\n                { links }\r\n            </header>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(Navbar)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../css/styles.css'\r\nimport '../../css/home.css'\r\n\r\n\r\nclass Home extends Component{\r\n    \r\n    componentDidMount(){\r\n        document.body.className=\"home\"\r\n\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.body.style.backgroundColor = 'black'\r\n\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n    return(\r\n        <div>\r\n                    \r\n                <main className=\"home-main-section container\">\r\n                        <div className=\"side-content\">\r\n                            <p>EAT.</p>\r\n                            <p>PRAY.</p>\r\n                            <p>LOVE.</p>\r\n                        </div>\r\n                </main>\r\n                <Link to='/Signup' className =\"mybtn\">Sign Up</Link>\r\n                \r\n        </div>\r\n    \r\n      \r\n    \r\n      \r\n    \r\n    \r\n    \r\n        )\r\n    }\r\n  \r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport '../../css/blogList.css'\r\n// import Blog01 from '../../css/images/blog02.jpg'\r\nimport moment from 'moment'\r\n\r\n\r\nconst BlogSummary =({blog}) =>{\r\n\r\n  return(\r\n        <div className=\"blog01 box\">\r\n            <img src={blog.url} alt=''/>\r\n            <div className=\"likes-date\">\r\n                <span>{blog.likedBy.length} likes</span>\r\n                {/* <span>{blog.createdAt.toDate().toDateString()}</span> */}\r\n                <span>{moment(blog.createdAt.toDate()).calendar()}</span>\r\n            </div>\r\n            <div className=\"box-text\">\r\n                <h5>{blog.title} <span className=\"author\"> {blog.authorFirstName} {blog.authorLastName}</span></h5>\r\n                <p> { blog.content} </p>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n\r\n)\r\n}\r\n\r\nexport default BlogSummary","import React, { Component } from 'react';\r\nimport BlogSummary from './BlogSummary';\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Link,Redirect } from 'react-router-dom'\r\n\r\nclass BlogList extends Component{\r\n\r\n    state = {\r\n        filter: ''\r\n    }\r\n\r\n    handleFilter = (e) =>{\r\n        console.log(e.target.id)\r\n        this.setState({\r\n            filter: e.target.id\r\n        })\r\n\r\n    \r\n    };\r\n\r\n    componentDidMount(){\r\n        document.body.style.backgroundColor = 'black'\r\n\r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n        console.log(this.props);\r\n        const { blogs, auth } = this.props;\r\n\r\n        \r\n        if(!auth.uid) return <Redirect to ='/login'/>\r\n        \r\n      \r\n            return (\r\n                <div className=\"blog\">\r\n                    <ul className = \"blog-filters\">\r\n                        <li ><a href='#' id = 'All' onClick = {this.handleFilter}>All</a></li>\r\n                        <li ><a href='#' id = 'Favorites' onClick = {this.handleFilter}>Favorites</a></li>\r\n                        <li><a href='#' id = 'Savory' onClick = {this.handleFilter}>Savory</a></li>\r\n                        <li><a href='#' id = 'Sweet' onClick = {this.handleFilter}>Sweet</a></li>\r\n                    </ul>\r\n        \r\n                    <main className=\"gallery container\">\r\n                        {blogs && blogs.map(blog =>{\r\n                            if(this.state.filter === 'Favorites'){\r\n                                if(blog.likedBy.length > 1){\r\n                                    return(\r\n                                        <Link to = {'/bloglist/' + blog.id} key={blog.id} className= \"card\">\r\n                                            <BlogSummary blog={ blog }  />\r\n                                        </Link>\r\n                            \r\n                                    )\r\n                                }\r\n                                \r\n                            }\r\n        \r\n                            else if(this.state.filter === 'Sweet'){\r\n                                if(blog.cuisine === 'sweet'){\r\n                                    return(\r\n                                        <Link to = {'/bloglist/' + blog.id} key={blog.id} className= \"card\">\r\n                                            <BlogSummary blog={ blog }  />\r\n                                        </Link>\r\n                            \r\n                                    )\r\n                                }\r\n        \r\n                            }\r\n        \r\n                            else if(this.state.filter === 'Savory'){\r\n                                if(blog.cuisine === 'savory' ){\r\n                                    return(\r\n                                        <Link to = {'/bloglist/' + blog.id} key={blog.id} className= \"card\">\r\n                                            <BlogSummary blog={ blog }  />\r\n                                        </Link>\r\n                            \r\n                                    )\r\n                                }\r\n        \r\n                            }\r\n                            else{\r\n                                return(\r\n                                    <Link to = {'/bloglist/' + blog.id} key={blog.id} className= \"card\">\r\n                                        <BlogSummary blog={ blog }  />\r\n                                    </Link>\r\n                            \r\n                                    )\r\n                            }\r\n                            \r\n                        })}\r\n                    </main>\r\n                </div>\r\n           \r\n                )\r\n        \r\n\r\n   \r\n      \r\n    }\r\n}\r\n\r\nconst mapStatetoProps = state =>{\r\n    console.log(state);\r\n    return{\r\n        blogs: state.firestore.ordered.blogs,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStatetoProps),\r\n    firestoreConnect([\r\n        { collection: 'blogs',  orderBy: ['createdAt','desc']   }\r\n    ])\r\n) (BlogList)","import React from 'react'\r\nimport '../../css/singleBlog.css'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport moment from 'moment'\r\nimport { Component } from 'react'\r\nimport { likeBlog } from '../../store/actions/blogActions'\r\n\r\n\r\nclass BlogDetails extends Component{ \r\n\r\n  handleLike = () =>{\r\n    this.props.likeBlog(this.props.blog,this.props.match.params.id);\r\n  }\r\n\r\n\r\n  render(){\r\n  console.log(this.props);\r\n  const { blog } = this.props;\r\n  if(blog) {\r\n    return(\r\n         <section className=\"single-blog container\">\r\n            <h1 className=\"title text-pink\">{ blog.title }</h1>\r\n            <p> { blog.content }</p>\r\n            {/* <h3 className= 'text-pink'>{ blog.cuisine }</h3> */}\r\n            <h4 className=\"footer\">Posted by { blog.authorFirstName } { blog.authorLastName }</h4>\r\n            <h4 className=\"footer\">{moment(blog.createdAt.toDate()).calendar()}</h4>\r\n\r\n           <button class='like-button' onClick ={this.handleLike}>Like</button>\r\n       \r\n        </section>\r\n    )\r\n     \r\n  }\r\n  else{\r\n    return(\r\n        <section className = \"container\">\r\n          <p>'Loading Project....'</p>\r\n        </section>\r\n      )\r\n  }\r\n\r\n}\r\n}\r\n\r\n\r\nconst mapStatetoProps = (state,ownProps) =>{\r\n  console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const blogs = state.firestore.data.blogs;\r\n  const blog = blogs? blogs[id] :null;\r\n  return {\r\n      blog:blog,\r\n  }\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) =>{\r\n  return{\r\n    likeBlog: (blog,id) => dispatch(likeBlog(blog,id))\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStatetoProps,mapDispatchtoProps),\r\n  firestoreConnect([\r\n    { collection : 'blogs' }\r\n  ])\r\n)(BlogDetails)\r\n\r\n\r\n","import { firestore } from '../../config/fbConfig'\r\n\r\nexport const createBlog = (blog) =>{\r\n    return (dispatch,getState,{ getFirebase }) =>{\r\n        //make async call to database\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore.collection('blogs').add({\r\n            ...blog,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId,\r\n            createdAt: new Date()\r\n\r\n        }).then(() =>{\r\n            dispatch({ type:'CREATE_BLOG',blog });\r\n        }).catch((err) =>{\r\n            dispatch({ type:'CREATE_BLOG_ERROR',err });\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const likeBlog = (blog,id) =>{ //the blog param gives access to the likedBy parameter in the state object of CreateBlog.js\r\n    \r\n    return (dispatch, getState)  => {\r\n        const signedInUser = getState().firebase.auth.uid\r\n        let updatedLikedBy;\r\n            if(blog.likedBy.indexOf(signedInUser) ===-1){  //if user uid not in array then add it to the preexisting ones\r\n            updatedLikedBy = [...blog.likedBy, signedInUser] // add in the new signedInUser uid in the updated likedBy array list\r\n            } else {\r\n            updatedLikedBy = blog.likedBy.filter(item => item !== signedInUser)\r\n\r\n            }\r\n    \r\n    \r\n        const updatedPost = { ...blog, likedBy: updatedLikedBy} \r\n\r\n        firestore.collection('blogs')\r\n            .doc(id) // pass in the id of the blog from the blog details\r\n            .set(updatedPost).then(() =>{dispatch({type:'ADD_LIKE', blog});\r\n                           }).catch((err) => {dispatch({type:'ADD_LIKE_ERROR', err});\r\n                        })\r\n\r\n\r\n      };\r\n    \r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../../css/login.css'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Login extends Component{\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n      }\r\n      handleChange = (e) => {\r\n        this.setState({\r\n          [e.target.id]: e.target.value\r\n        })\r\n      }\r\n      handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.login(this.state);\r\n      }\r\n\r\n    \r\n      componentDidMount(){\r\n        document.body.style.backgroundColor = 'black'\r\n\r\n\r\n    }\r\n    render() {\r\n       const { authError,auth } = this.props;\r\n       if(auth.uid) return <Redirect to ='/'/>\r\n        return (\r\n           <section className=\"main-login container\">\r\n            <h1 className=\"join-text\">\r\n                    Spread the <span className=\"text-pink\">joy.</span>\r\n            </h1>\r\n\r\n            <div className=\"form-login\">\r\n                <h1 className=\"text-pink\">Member Login</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"input-login\">\r\n                        <input type=\"email\" id=\"email\" placeholder=\"Email\" onChange={this.handleChange}/>\r\n                        <input type=\"password\" id=\"password\" placeholder=\"Password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                        \r\n                    <button type = \"submit\" className=\"login-btn\">\r\n                      LOGIN\r\n                    </button>\r\n\r\n                    <div className=\"loginAuthError\">\r\n                      {authError? <p>{authError}</p> :null }\r\n                    </div>\r\n\r\n                    <p className=\"forget-pass\">Forget Username/Password?</p>                   \r\n                \r\n                    \r\n                </form>\r\n\r\n                <Link to='/Signup'><a className=\"create-account\" ref=\"#\" >Create Account</a></Link>\r\n        </div>\r\n        </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = state =>{\r\n  return{\r\n    authError:state.auth.authError,\r\n    auth : state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) =>{\r\n  return{\r\n    login:creds => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStatetoProps,mapDispatchtoProps)(Login)","import React, { Component } from 'react'\r\nimport '../../css/signup.css'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\n\r\nclass Signup extends Component{\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName:'',\r\n        lastName:''\r\n      }\r\n      handleChange = (e) => {\r\n        this.setState({\r\n          [e.target.id]: e.target.value\r\n        })\r\n      }\r\n      handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n      }\r\n    \r\n      componentDidMount(){\r\n        document.body.style.backgroundColor = 'black'\r\n\r\n\r\n    }\r\n    render() {\r\n      const { authError,auth } = this.props;\r\n      if(auth.uid) return <Redirect to ='/'/>\r\n        return (\r\n           <section className=\"main-section container\">\r\n            <h1 className=\"join-text\">\r\n                    Join the <span className=\"text-pink\">fun.</span>\r\n            </h1>\r\n\r\n            \r\n            <div className=\"main-form\">\r\n                <h1 className=\"text-pink\">Sign Up</h1>\r\n                <form onSubmit = {this.handleSubmit}>\r\n                    <div className=\"input-form\">\r\n                        <input type=\"email\" id=\"email\" placeholder=\"Email\"onChange={this.handleChange}/>\r\n                        <input type=\"password\" id=\"password\" placeholder=\"Password\"onChange={this.handleChange}/>\r\n                        <input type=\"text\" id=\"firstName\" placeholder=\"First Name\" onChange={this.handleChange}/>\r\n                        <input type=\"text\" id=\"lastName\" placeholder=\"Last Name\" onChange={this.handleChange}/>\r\n\r\n                    </div>\r\n                        \r\n                    <button type=\"submit\" className=\"form-btn\">\r\n                      Register\r\n                    </button>\r\n\r\n                    <div className=\"signUpAuthError\">\r\n                      {authError? <p>{authError}</p> :null }\r\n                    </div>\r\n                 \r\n                </form>\r\n\r\n            </div>\r\n        </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = state =>{\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError : state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) => {\r\n  return{\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps,mapDispatchtoProps)(Signup)","import React, { Component } from 'react'\r\nimport '../../css/createBlog.css'\r\nimport { connect } from 'react-redux'\r\nimport {createBlog} from '../../store/actions/blogActions'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { storage } from '../../config/fbConfig'\r\n\r\nclass CreateBlog extends Component{\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        likedBy: '',\r\n        image : null,\r\n        url :'',\r\n        cuisine:''\r\n      }\r\n      \r\n      handleSelect = (e) =>{\r\n        const selectValue = e.target.value;\r\n        this.setState({cuisine:selectValue});\r\n      }\r\n\r\n      handleChange = (e) => {\r\n        this.setState({\r\n          [e.target.id]: e.target.value\r\n        })\r\n      }\r\n      handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.props);\r\n        this.props.createBlog(this.state);\r\n        this.props.history.push('/');\r\n      }\r\n\r\n      handleImage = (e) =>{\r\n        if (e.target.files[0]) {\r\n          const image = e.target.files[0];\r\n          // console.log(image);\r\n          this.setState(() => ({image}));\r\n        }\r\n        \r\n      }\r\n\r\n      handleUpload = (e) =>{\r\n        e.preventDefault();\r\n        const {image} = this.state;\r\n        const imageName = image.name;\r\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n        uploadTask.on('state_changed',\r\n        snapshot => {\r\n          // progress function ...\r\n        const progress = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n        },\r\n        error => {\r\n          // Error function ...\r\n          console.log(error);\r\n        },\r\n         () => {\r\n          // complete function ....\r\n          storage.ref('images').child(image.name).getDownloadURL().then(url => {\r\n              console.log(url);\r\n              this.setState({url});\r\n\r\n          })\r\n      });\r\n      this.setState(() => ({ image: imageName}));\r\n      }\r\n\r\n  \r\n\r\n\r\n      componentDidMount(){\r\n        document.body.style.backgroundColor = 'black'\r\n\r\n\r\n    }\r\n\r\n  \r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to ='/login'/>\r\n        return (\r\n            \r\n        <div className=\"create-blog container\">\r\n            <form onSubmit = {this.handleSubmit}>\r\n              <h1 className=\"text-pink\">Create Blog</h1>\r\n\r\n              <input type=\"text\" id=\"title\" placeholder=\"Title\" onChange = {this.handleChange}/>\r\n              \r\n\r\n              <textarea id=\"content\" className=\"write-blog\"placeholder=\"Write Blog\"onChange = {this.handleChange} ></textarea>\r\n\r\n              <div className= \"createblog-buttons\">\r\n                  <div className=\"select-wrapper\">\r\n                      <select id ='cuisine' onChange = {this.handleSelect}>\r\n                          <option value=\"\" disabled selected hidden>Select Type</option>\r\n                          <option value=\"savory\">Savory</option>\r\n                          <option value=\"sweet\">Sweet</option>\r\n                       \r\n                      </select>\r\n                  </div>\r\n\r\n       \r\n                  <input className='custom-file-input' type=\"file\" name=\"myfile\"  onChange = { this.handleImage}/>\r\n\r\n\r\n                  <div className ='upload-file'>\r\n                     <button onClick = {this.handleUpload}>Upload image</button>\r\n                  </div>\r\n              </div>\r\n\r\n              \r\n              {this.state.url ? <button type = \"submit\" className=\"create-btn\">Create</button>:null}\r\n            </form>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) =>{\r\n  return{\r\n    createBlog : blog => {dispatch(createBlog(blog))}\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = state =>{\r\n \r\n  return{\r\n    auth : state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps,mapDispatchtoProps)(CreateBlog)","import React from 'react'\r\nimport '../../css/notifications.css'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport moment from 'moment'\r\n\r\n\r\nconst Notifications = (props) =>{\r\n\r\n    const {notifications} = props;\r\n   return(\r\n       <div className='container'>\r\n           <h1>Notifications</h1>\r\n           <ul className=\"notifications\">\r\n            { notifications && notifications.map(item =>{\r\n                return <li key={item.id}>\r\n                    <span className=\"notification-user\">{item.user} </span>\r\n                    <span>{item.content}</span>\r\n                    <div className=\"notification-date\">{moment(item.time.toDate()).fromNow()}</div>\r\n                </li>\r\n                })\r\n            }\r\n           </ul>\r\n       </div>\r\n   )\r\n}\r\n\r\nconst mapStatetoProps = state =>{\r\n    //console.log(state);\r\n    return{\r\n        notifications:state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStatetoProps),\r\n    firestoreConnect([\r\n        { collection:'notifications',limit:3, orderBy: ['time','desc']}\r\n    ])\r\n) (Notifications)","import React, { Component } from 'react';\nimport { BrowserRouter,Switch,Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Home from './components/home/Home'\nimport BlogList from './components/blogs/BlogList';\nimport BlogDetails from './components/blogs/BlogDetails';\nimport Login from './components/auth/Login';\nimport Signup from './components/auth/Signup';\nimport CreateBlog from './components/blogs/CreateBlog';\nimport Notifications from './components/home/Notification';\n\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path = '/' component={Home} />\n            <Route exact path = '/notifications' component={Notifications} />\n            <Route  exact path = '/bloglist' component={BlogList} />\n            <Route  path = '/bloglist/:id' component={BlogDetails} />\n            <Route path ='/login' component ={Login}/>\n            <Route path ='/signup' component ={Signup}/>\n            <Route path = '/createblog' component = {CreateBlog}/>\n       \n\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch(action.type){\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      }\r\n\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state;\r\n\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error')\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default authReducer;","const initState = {\r\n    blogs: [\r\n        {id:1, title:'Stawberry Cheesecake', content:'blah blah blah'},\r\n        {id:2, title:'Hot Chocolate', content:'blah blah blah'},\r\n        {id:3, title:'Pizza with Pepporoni', content:'blah blah blah'},\r\n    ]\r\n};\r\n\r\nconst blogReducer= (state=initState,action) => {\r\n    switch(action.type){\r\n        case 'CREATE_BLOG':\r\n            console.log('created a freaking project', action.blog);\r\n            return state;\r\n        case 'CREATE_BLOG_ERROR':\r\n            console.log('created a freaking project error', action.err);\r\n            return state;\r\n        case 'ADD_LIKE':\r\n            console.log('liked something maybe');\r\n            return state;\r\n        case 'ADD_LIKE_ERROR':\r\n            console.log('dont know! a like error', action.err);\r\n            return state;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default blogReducer;","import authReducer from './authReducer'\r\nimport blogReducer from './blogReducer'\r\nimport {combineReducers} from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    blog: blogReducer,\r\n    firestore: firestoreReducer,\r\n    firebase : firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware,compose} from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider,useSelector } from 'react-redux'\nimport thunk from 'redux-thunk'\n// import {reduxFirestore,getFirestore} from 'redux-firestore'\nimport { createFirestoreInstance } from 'redux-firestore'\n// import {reactReduxFirebase,getFirebase} from 'react-redux-firebase'\nimport { ReactReduxFirebaseProvider, getFirebase,isLoaded } from 'react-redux-firebase'\n\nimport firebase from './config/fbConfig'\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase})),\n        // reduxFirestore(fbConfig),\n        // reactReduxFirebase(fbConfig)\n    )\n);\n\nconst rrfConfig = { \n    userProfile: 'users',\n    useFirestoreForProfile:true\n}\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance // <- needed if using firestore\n    }\n\nfunction AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div>Loading...</div>;\n    return children\n }\n\nReactDOM.render(\n    <Provider store ={store}> \n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <AuthIsLoaded>\n                <App />\n            </AuthIsLoaded>\n            \n        </ReactReduxFirebaseProvider>\n    </Provider>, \n    \n    \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}